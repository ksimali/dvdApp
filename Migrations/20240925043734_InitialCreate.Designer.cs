// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dvdApp.Data;

#nullable disable

namespace dvdApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240925043734_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("dvdApp.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adolescent"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Biographie"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cape et d'épée"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Catastrophe"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Chronique"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Comédie de moeurs"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Comédie d'horreur"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Comédie dramatique"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Comédie fantaisiste"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Comédie musicale"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Comédie policière"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Comédie satirique"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Comédie sentimentale"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Comédie"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Criminel"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Danse"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Dessins animés"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Documentaire"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Drame de guerre"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Drame de moeurs"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Drame d'horreur"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Drame judiciaire"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Drame musical"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Drame poétique"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Drame policier"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Drame psychologique"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Drame sentimental"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Drame social"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Drame"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Espionnage"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Expérimental"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Fantastique"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Film à sketches"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Film d'animation"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Film d'art martial"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Historique"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Horreur"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Humoristique"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Marionnettes"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Mélodrame"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Musical"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Road movie"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Romantique"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Science-fiction"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Série policière"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Série TV"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Spectacle d'humour"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Spectacle musical"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Suspense"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Western"
                        });
                });

            modelBuilder.Entity("dvdApp.Models.Dvd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActeursPrincipaux")
                        .HasColumnType("longtext");

                    b.Property<int?>("AnneeSortie")
                        .HasColumnType("int");

                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DerniereMiseAJour")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Duree")
                        .HasColumnType("int");

                    b.Property<string>("Emprunteur")
                        .HasColumnType("longtext");

                    b.Property<bool>("EstOriginal")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EstVersionEtendue")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EstVisible")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Format")
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePochette")
                        .HasColumnType("longtext");

                    b.Property<string>("Langue")
                        .HasColumnType("longtext");

                    b.Property<string>("MiseAJourEffectueePar")
                        .HasColumnType("longtext");

                    b.Property<int?>("NombreDisques")
                        .HasColumnType("int");

                    b.Property<string>("Producteur")
                        .HasColumnType("longtext");

                    b.Property<string>("Proprietaire")
                        .HasColumnType("longtext");

                    b.Property<string>("Realisateur")
                        .HasColumnType("longtext");

                    b.Property<string>("Resume")
                        .HasColumnType("longtext");

                    b.Property<string>("SousTitres")
                        .HasColumnType("longtext");

                    b.Property<string>("Supplements")
                        .HasColumnType("longtext");

                    b.Property<string>("TitreFrancais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TitreOriginal")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.ToTable("Dvds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActeursPrincipaux = "Keanu Reeves, Laurence Fishburne",
                            AnneeSortie = 1999,
                            CategorieId = 4,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3440),
                            Duree = 136,
                            Emprunteur = "Driss",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "Blu-ray",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 1,
                            Producteur = "Joel Silver",
                            Proprietaire = "Cassim",
                            Realisateur = "Lana Wachowski, Lilly Wachowski",
                            Resume = "Un pirate informatique découvre une réalité alternative.",
                            SousTitres = "Français, English",
                            TitreFrancais = "La Matrice",
                            TitreOriginal = "The Matrix"
                        },
                        new
                        {
                            Id = 2,
                            ActeursPrincipaux = "Marlon Brando, Al Pacino",
                            AnneeSortie = 1972,
                            CategorieId = 3,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3450),
                            Duree = 175,
                            Emprunteur = "Driss",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "DVD",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 2,
                            Producteur = "Albert S. Ruddy",
                            Proprietaire = "Cassim",
                            Realisateur = "Francis Ford Coppola",
                            Resume = "L'histoire de la famille Corleone.",
                            SousTitres = "Français, English",
                            TitreFrancais = "Le Parrain",
                            TitreOriginal = "The Godfather"
                        },
                        new
                        {
                            Id = 3,
                            ActeursPrincipaux = "Leonardo DiCaprio, Joseph Gordon-Levitt",
                            AnneeSortie = 2010,
                            CategorieId = 4,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3460),
                            Duree = 148,
                            Emprunteur = "Driss",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "Blu-ray",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 1,
                            Producteur = "Emma Thomas",
                            Proprietaire = "Cassim",
                            Realisateur = "Christopher Nolan",
                            Resume = "Un voleur s'infiltre dans les rêves.",
                            SousTitres = "Français, English",
                            TitreFrancais = "Inception",
                            TitreOriginal = "Inception"
                        },
                        new
                        {
                            Id = 4,
                            ActeursPrincipaux = "John Travolta, Samuel L. Jackson",
                            AnneeSortie = 1994,
                            CategorieId = 2,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3470),
                            Duree = 154,
                            Emprunteur = "Driss",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "DVD",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 1,
                            Producteur = "Lawrence Bender",
                            Proprietaire = "Cassim",
                            Realisateur = "Quentin Tarantino",
                            Resume = "Des histoires entrecroisées dans le monde du crime.",
                            SousTitres = "Français, English",
                            TitreFrancais = "Pulp Fiction",
                            TitreOriginal = "Pulp Fiction"
                        },
                        new
                        {
                            Id = 5,
                            ActeursPrincipaux = "Leonardo DiCaprio, Kate Winslet",
                            AnneeSortie = 1997,
                            CategorieId = 7,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3480),
                            Duree = 195,
                            Emprunteur = "Driss",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "DVD",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 2,
                            Producteur = "James Cameron",
                            Proprietaire = "Cassim",
                            Realisateur = "James Cameron",
                            Resume = "Une romance tragique à bord du Titanic.",
                            SousTitres = "Français, English",
                            TitreFrancais = "Titanic",
                            TitreOriginal = "Titanic"
                        },
                        new
                        {
                            Id = 6,
                            ActeursPrincipaux = "Mark Hamill, Harrison Ford",
                            AnneeSortie = 1977,
                            CategorieId = 9,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3480),
                            Duree = 121,
                            Emprunteur = "Cassim",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "Blu-ray",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 1,
                            Producteur = "Gary Kurtz",
                            Proprietaire = "Rachid",
                            Realisateur = "George Lucas",
                            Resume = "L'épopée galactique commence avec Luke Skywalker.",
                            SousTitres = "Français, English",
                            TitreFrancais = "Star Wars : Un nouvel espoir",
                            TitreOriginal = "Star Wars: A New Hope"
                        },
                        new
                        {
                            Id = 7,
                            ActeursPrincipaux = "Liam Neeson, Ben Kingsley",
                            AnneeSortie = 1993,
                            CategorieId = 8,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3490),
                            Duree = 195,
                            Emprunteur = "Cassim",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "DVD",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 2,
                            Producteur = "Steven Spielberg",
                            Proprietaire = "Rachid",
                            Realisateur = "Steven Spielberg",
                            Resume = "L'histoire vraie d'un industriel qui sauva des centaines de Juifs pendant la Seconde Guerre mondiale.",
                            SousTitres = "Français, English",
                            TitreFrancais = "La Liste de Schindler",
                            TitreOriginal = "Schindler's List"
                        },
                        new
                        {
                            Id = 8,
                            ActeursPrincipaux = "Christian Bale, Heath Ledger",
                            AnneeSortie = 2008,
                            CategorieId = 1,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3500),
                            Duree = 152,
                            Emprunteur = "Cassim",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "Blu-ray",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 1,
                            Producteur = "Christopher Nolan",
                            Proprietaire = "Rachid",
                            Realisateur = "Christopher Nolan",
                            Resume = "Batman affronte le Joker dans un combat épique pour Gotham City.",
                            SousTitres = "Français, English",
                            TitreFrancais = "Le Chevalier Noir",
                            TitreOriginal = "The Dark Knight"
                        },
                        new
                        {
                            Id = 9,
                            ActeursPrincipaux = "Russell Crowe, Joaquin Phoenix",
                            AnneeSortie = 2000,
                            CategorieId = 1,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3510),
                            Duree = 155,
                            Emprunteur = "Cassim",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "Blu-ray",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 1,
                            Producteur = "Douglas Wick",
                            Proprietaire = "Rachid",
                            Realisateur = "Ridley Scott",
                            Resume = "Un général romain trahi revient comme gladiateur pour se venger.",
                            SousTitres = "Français, English",
                            TitreFrancais = "Gladiator",
                            TitreOriginal = "Gladiator"
                        },
                        new
                        {
                            Id = 10,
                            ActeursPrincipaux = "Sigourney Weaver, Tom Skerritt",
                            AnneeSortie = 1979,
                            CategorieId = 5,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3520),
                            Duree = 117,
                            Emprunteur = "Cassim",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "DVD",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 1,
                            Producteur = "Walter Hill",
                            Proprietaire = "Rachid",
                            Realisateur = "Ridley Scott",
                            Resume = "Un équipage spatial affronte une créature extraterrestre mortelle.",
                            SousTitres = "Français, English",
                            TitreFrancais = "Alien",
                            TitreOriginal = "Alien"
                        },
                        new
                        {
                            Id = 11,
                            ActeursPrincipaux = "Tom Hanks, Robin Wright",
                            AnneeSortie = 1994,
                            CategorieId = 3,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3530),
                            Duree = 142,
                            Emprunteur = "Cassim",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "DVD",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 1,
                            Producteur = "Wendy Finerman",
                            Proprietaire = "Rachid",
                            Realisateur = "Robert Zemeckis",
                            Resume = "La vie extraordinaire de Forrest Gump, un homme avec un faible QI.",
                            SousTitres = "Français, English",
                            TitreFrancais = "Forrest Gump",
                            TitreOriginal = "Forrest Gump"
                        },
                        new
                        {
                            Id = 12,
                            ActeursPrincipaux = "Jodie Foster, Anthony Hopkins",
                            AnneeSortie = 1991,
                            CategorieId = 5,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3530),
                            Duree = 118,
                            Emprunteur = "Rachid",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "DVD",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 1,
                            Producteur = "Kenneth Utt",
                            Proprietaire = "Driss",
                            Realisateur = "Jonathan Demme",
                            Resume = "Une jeune agent du FBI cherche l'aide d'un tueur en série emprisonné.",
                            SousTitres = "Français, English",
                            TitreFrancais = "Le Silence des agneaux",
                            TitreOriginal = "The Silence of the Lambs"
                        },
                        new
                        {
                            Id = 13,
                            ActeursPrincipaux = "Tim Robbins, Morgan Freeman",
                            AnneeSortie = 1994,
                            CategorieId = 3,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3540),
                            Duree = 142,
                            Emprunteur = "Rachid",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "Blu-ray",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 1,
                            Producteur = "Niki Marvin",
                            Proprietaire = "Driss",
                            Realisateur = "Frank Darabont",
                            Resume = "L'histoire d'un homme emprisonné qui se lie d'amitié avec un autre détenu.",
                            SousTitres = "Français, English",
                            TitreFrancais = "Les Évadés",
                            TitreOriginal = "The Shawshank Redemption"
                        },
                        new
                        {
                            Id = 14,
                            ActeursPrincipaux = "Matthew Broderick, James Earl Jones",
                            AnneeSortie = 1994,
                            CategorieId = 2,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3550),
                            Duree = 88,
                            Emprunteur = "Rachid",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "DVD",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 1,
                            Producteur = "Don Hahn",
                            Proprietaire = "Driss",
                            Realisateur = "Roger Allers, Rob Minkoff",
                            Resume = "L'histoire d'un lionceau qui devient roi après la mort de son père.",
                            SousTitres = "Français, English",
                            TitreFrancais = "Le Roi Lion",
                            TitreOriginal = "The Lion King"
                        },
                        new
                        {
                            Id = 15,
                            ActeursPrincipaux = "Sam Neill, Laura Dern",
                            AnneeSortie = 1993,
                            CategorieId = 1,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3560),
                            Duree = 127,
                            Emprunteur = "Rachid",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "DVD",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 1,
                            Producteur = "Gerald R. Molen",
                            Proprietaire = "Driss",
                            Realisateur = "Steven Spielberg",
                            Resume = "Des scientifiques essaient de créer un parc avec des dinosaures vivants.",
                            SousTitres = "Français, English",
                            TitreFrancais = "Jurassic Park",
                            TitreOriginal = "Jurassic Park"
                        },
                        new
                        {
                            Id = 16,
                            ActeursPrincipaux = "Ryan Gosling, Emma Stone",
                            AnneeSortie = 2016,
                            CategorieId = 7,
                            DerniereMiseAJour = new DateTime(2024, 9, 25, 0, 37, 32, 518, DateTimeKind.Local).AddTicks(3570),
                            Duree = 128,
                            Emprunteur = "Rachid",
                            EstOriginal = true,
                            EstVersionEtendue = false,
                            EstVisible = true,
                            Format = "Blu-ray",
                            ImagePochette = "/wwwroot/img/icon1.jpg",
                            Langue = "Anglais",
                            MiseAJourEffectueePar = "Cassim",
                            NombreDisques = 1,
                            Producteur = "Fred Berger",
                            Proprietaire = "Driss",
                            Realisateur = "Damien Chazelle",
                            Resume = "Un musicien et une actrice poursuivent leurs rêves.",
                            SousTitres = "Français, English",
                            TitreFrancais = "La La Land",
                            TitreOriginal = "La La Land"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dvdApp.Models.Dvd", b =>
                {
                    b.HasOne("dvdApp.Models.Categorie", "Categorie")
                        .WithMany("Dvds")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("dvdApp.Models.Categorie", b =>
                {
                    b.Navigation("Dvds");
                });
#pragma warning restore 612, 618
        }
    }
}
